!function(){"use strict";var e={};function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t(e)}function n(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,r(o.key),o)}}function r(e){var n=function(e,n){if("object"!=t(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!=t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==t(n)?n:n+""}e.p="";var o=function(){return e=function e(t,n,r,o,i,c){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._link=t.link,this._id=t._id,this._likes=t.likes,this._cardId=t._id,this.owner=t.owner,this.userId=n,this._handleCardClick=r,this._handleCardDelete=o,this._handleCardLike=i,this._handleCardDislike=c,this._card=this._getTemplate()},(t=[{key:"_getTemplate",value:function(){return document.querySelector("#gallery-template").content.querySelector(".gallery__item").cloneNode(!0)}},{key:"_setProperties",value:function(){this._btnDelete=this._card.querySelector(".gallery__trash"),this.owner._id!==this.userId&&this._btnDelete.remove(),this._galleryImage=this._card.querySelector(".gallery__image"),this._galleryCont=this._card.querySelector(".gallery__content-text"),this._galleryTitle=this._galleryCont.querySelector(".gallery__title-item"),this._btnLike=this._galleryCont.querySelector(".gallery__like"),this.likesCounter=this._galleryCont.querySelector(".gallery__like-number"),this._galleryImage.src=this._link,this._galleryImage.alt=this._name,this._galleryTitle.textContent=this._name,this.likesCounter.textContent=this._likes.length}},{key:"_setEventListeners",value:function(){var e=this;this._btnLike.addEventListener("click",(function(){e._btnLike.classList.toggle("gallery__like_active")})),this._btnDelete.addEventListener("click",(function(){console.log("entrando a eliminar"),e._handleCardDelete(e._id,e._btnDelete)})),this._galleryImage.addEventListener("click",(function(){e._handleCardClick(e._name,e._link)}))}},{key:"generateCard",value:function(){return this._setProperties(),this._setEventListeners(),this._card}}])&&n(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,u(r.key),r)}}function u(e){var t=function(e,t){if("object"!=i(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=i(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==i(t)?t:t+""}var a=function(){return e=function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._settings=t,this._formElement=n},(t=[{key:"_showInputError",value:function(e,t,n){var r=n.querySelector(".".concat(e.id,"-error"));e.classList.add(this._settings.inputErrorClass),r.textContent=t,r.classList.add(this._settings.inputErrorActive)}},{key:"_hideInputError",value:function(e,t){var n=t.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._settings.inputErrorClass),n.classList.remove(this._settings.inputErrorActive),n.textContent=""}},{key:"_checkInputValidity",value:function(e,t){e.validity.valid?this._hideInputError(e,t):this._showInputError(e,e.validationMessage,t)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid||0===e.value.trim().length}))}},{key:"_toggleButtonState",value:function(e,t){this._hasInvalidInput(e)?t.classList.add(this._settings.inactiveButtonClass):t.classList.remove(this._settings.inactiveButtonClass)}},{key:"_setEventListeners",value:function(){var e=this,t=Array.from(this._formElement.querySelectorAll(this._settings.inputSelector)),n=this._formElement.querySelector(this._settings.submitButtonSelector);this._toggleButtonState(t,n),t.forEach((function(r){e._addEventInputAndValidate(r,t,n,e._formElement)}))}},{key:"_addEventInputAndValidate",value:function(e,t,n,r){var o=this;e.addEventListener("input",(function(){o._checkInputValidity(e,r),o._toggleButtonState(t,n)}))}},{key:"_getSubmit",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()}))}},{key:"enableValidation",value:function(){this._getSubmit(),this._setEventListeners()}}])&&c(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}(),l=document.querySelector(".profile").querySelector(".profile__container"),s=l.querySelector(".profile__data"),f=document.querySelector(".main").querySelector(".gallery"),p=document.querySelector(".popup-show").querySelector(".popup-show__container"),y=p.querySelector(".popup-show__close"),h=(p.querySelector(".popup-show__add"),p.querySelector(".popup-show__title-create"),document.querySelector("#remove-card")),d=s.querySelector(".profile__edit-data"),m=document.querySelector("#close-profile"),v=document.querySelector(".profile__name"),b=document.querySelector(".profile__description"),_=(document.querySelector(".profile__face-image"),l.querySelector(".profile__add-picture")),g=document.querySelector("#input-name"),S=document.querySelector("#input-desc"),w=document.querySelector("#close-card");function E(e){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},E(e)}function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,P(r.key),r)}}function P(e){var t=function(e,t){if("object"!=E(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=E(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==E(t)?t:t+""}var j=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)},(t=[{key:"open",value:function(){this._popupElement.classList.add("popup_generate"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_generate"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"handleClickOutside",value:function(e){e.target===this._popupElement&&this.close()}},{key:"setEventListeners",value:function(){var e=this;document.addEventListener("keydown",this._handleEscClose),this._popupElement.addEventListener("click",(function(t){e.handleClickOutside(t)}))}}])&&k(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function O(e){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},O(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,q(r.key),r)}}function q(e){var t=function(e,t){if("object"!=O(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=O(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==O(t)?t:t+""}function L(e,t,n){return t=D(t),function(e,t){if(t&&("object"==O(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,I()?Reflect.construct(t,n||[],D(e).constructor):t.apply(e,n))}function I(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(I=function(){return!!e})()}function T(){return T="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=D(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},T.apply(null,arguments)}function D(e){return D=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},D(e)}function R(e,t){return R=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},R(e,t)}var x=function(e){function t(e,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=L(this,t,[e]))._formElement=r._popupElement.querySelector(".popup__form"),r._inputList=r._formElement.querySelectorAll(".popup__input"),r._handleFormSubmit=n,r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&R(e,t)}(t,e),n=t,(r=[{key:"close",value:function(){T(D(t.prototype),"close",this).call(this),this._formElement.reset()}},{key:"getInputValues",value:function(){var e=this;return this.formValues={},this._inputList.forEach((function(t){e.formValues[t.name]=t.value})),this.formValues}},{key:"setEventListeners",value:function(){var e=this;T(D(t.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e.getInputValues()),e.close()}))}}])&&C(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(j);function U(e){return U="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},U(e)}function B(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,A(r.key),r)}}function A(e){var t=function(e,t){if("object"!=U(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=U(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==U(t)?t:t+""}var V=function(){return e=function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=r,this._renderer=o,this._container=document.querySelector(n)},(t=[{key:"addItem",value:function(e){this._container.append(e)}},{key:"clear",value:function(){this._container.innerHTML=""}},{key:"renderer",value:function(){var e=this;this.clear(),this._renderedItems.forEach((function(t){e._renderer(t)}))}}])&&B(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function N(e){return N="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},N(e)}function F(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,J(r.key),r)}}function J(e){var t=function(e,t){if("object"!=N(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=N(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==N(t)?t:t+""}var G=function(){return e=function e(t){var n=t.nameSelector,r=t.jobSelector,o=t.avatarSelector,i=t.id;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._job=document.querySelector(r),this._avatar=document.querySelector(o),this._userId=i},(t=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,job:this._job.textContent,avatar:this._avatar.src,_id:this._userId}}},{key:"setUserInfo",value:function(e){this._name.textContent=e.name,this._job.textContent=e.about,this._avatar.src=e.avatar,this._userId=e._id}}])&&F(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function H(e){return H="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},H(e)}function M(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,z(r.key),r)}}function z(e){var t=function(e,t){if("object"!=H(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=H(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==H(t)?t:t+""}function K(e,t,n){return t=X(t),function(e,t){if(t&&("object"==H(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,Q()?Reflect.construct(t,n||[],X(e).constructor):t.apply(e,n))}function Q(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(Q=function(){return!!e})()}function W(){return W="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=X(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},W.apply(null,arguments)}function X(e){return X=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},X(e)}function Y(e,t){return Y=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Y(e,t)}var Z=function(e){function t(e,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=K(this,t,[n]))._name=e.name,r._link=e.link,r._card=r._popupElement.querySelector(".popup-show__container"),r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Y(e,t)}(t,e),n=t,(r=[{key:"_setProperties",value:function(){this._image=this._card.querySelector(".popup-show__add"),this._title=this._card.querySelector(".popup-show__title-create"),this._image.src=this._link,this._image.alt=this._name,this._title.textContent=this._name}},{key:"open",value:function(){W(X(t.prototype),"open",this).call(this),W(X(t.prototype),"setEventListeners",this).call(this),this._setProperties()}}])&&M(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(j);function $(e){return $="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},$(e)}function ee(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,te(r.key),r)}}function te(e){var t=function(e,t){if("object"!=$(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=$(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==$(t)?t:t+""}var ne=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.baseUrl=t.baseUrl,this.headers=t.headers},(t=[{key:"handlePromise",value:function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}},{key:"getInitialCards",value:function(){var e=this;return fetch("".concat(this.baseUrl,"/cards"),{method:"GET",headers:this.headers}).then((function(t){return e.handlePromise(t)})).catch((function(e){console.log(e)}))}},{key:"getProfileInfo",value:function(){var e=this;return fetch("".concat(this.baseUrl,"/users/me"),{method:"GET",headers:this.headers}).then((function(t){return e.handlePromise(t)})).catch((function(e){console.log(e)}))}},{key:"editProfile",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/users/me"),{method:"PATCH",headers:this.headers,body:JSON.stringify({name:e.name,about:e.about})}).then((function(e){return t.handlePromise(e)})).catch((function(e){console.log(e)}))}},{key:"addCards",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/cards"),{method:"POST",headers:this.headers,body:JSON.stringify({name:e.name,link:e.link})}).then((function(e){return t.handlePromise(e)})).catch((function(e){console.log(e)}))}},{key:"removeCards",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this.headers,body:JSON.stringify({name:card.name,link:card.link})}).then((function(e){return t.handlePromise(e)})).catch((function(e){console.log(e)}))}},{key:"addLike",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this.headers}).then((function(e){return t.handlePromise(e)})).catch((function(e){console.log(e)}))}},{key:"deleteLike",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this.headers,body:JSON.stringify({name:card.name,link:card.link})}).then((function(e){return t.handlePromise(e)})).catch((function(e){console.log(e)}))}}])&&ee(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}(),re=e.p+"aa1b5592fed861ab3510.png",oe=e.p+"609b6840c8b2e02c8ca9.png",ie=e.p+"9036a094c3c410e6a834.png",ce=e.p+"b055c3f7a4de2a452e9d.png",ue=e.p+"4ca60d6bc216cdde68af.png";function ae(e){return ae="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ae(e)}function le(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,se(r.key),r)}}function se(e){var t=function(e,t){if("object"!=ae(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=ae(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==ae(t)?t:t+""}function fe(e,t,n){return t=he(t),function(e,t){if(t&&("object"==ae(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,pe()?Reflect.construct(t,n||[],he(e).constructor):t.apply(e,n))}function pe(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(pe=function(){return!!e})()}function ye(){return ye="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=he(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},ye.apply(null,arguments)}function he(e){return he=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},he(e)}function de(e,t){return de=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},de(e,t)}var me=function(e){function t(e,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=fe(this,t,[e]))._formElement=r._popupElement.querySelector(".popup__form"),r._handleFormSubmit=n,r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&de(e,t)}(t,e),n=t,(r=[{key:"setEventListeners",value:function(){var e=this;ye(he(t.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(),e.close()}))}}])&&le(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(j);function ve(){document.querySelectorAll(".gallery__image-trash").forEach((function(e){e.src=ue}))}document.querySelector("#image-logo").src=re,document.querySelector("#image-pencil").src=oe,document.querySelector("#image-add").src=ie,document.querySelector("#close-profile").src=ce,document.querySelector("#close-card").src=ce,document.querySelector("#close-show").src=ce;var be=new ne({baseUrl:"https://around.nomoreparties.co/v1/web_es_11",headers:{authorization:"f2d5b74c-c626-4038-b275-b200d36582b5","Content-Type":"application/json"}}),_e=new G({nameSelector:".profile__name",jobSelector:".profile__description",avatarSelector:".profile__face-image",id:""});function ge(e,t){var n=new Z({name:e,link:t},"#popup-show_id");n.open(),y.addEventListener("click",(function(){n.close()}))}function Se(e,t){var n=new me("#popup-delete",(function(){console.log("id: ",e)}));n.setEventListeners(),t.addEventListener("click",(function(){n.open()})),h.addEventListener("click",(function(){n.close()}))}function we(e){return new o(e,_e._userId,ge,Se)}be.getProfileInfo().then((function(e){_e.setUserInfo(e)})),be.getInitialCards().then((function(e){var t=new V({items:e,renderer:function(e){var n=we(e).generateCard();t.addItem(n)}},".gallery");t.renderer(),ve()}));var Ee=new x("#popup-profile",(function(e){be.editProfile(e).then((function(e){v.textContent=e.name,b.textContent=e.about}))}));Ee.setEventListeners(),d.addEventListener("click",(function(){Ee.open();var e=_e.getUserInfo();g.value=e.name,S.value=e.job})),m.addEventListener("click",(function(){Ee.close()}));var ke=new x("#popup-picture",(function(e){be.addCards({name:e.title,link:e.link}).then((function(e){var t=we(e);f.prepend(t.generateCard()),ve()}))}));ke.setEventListeners(),_.addEventListener("click",(function(){ke.open()})),w.addEventListener("click",(function(){ke.close()})),Array.from(document.querySelectorAll(".popup__form")).forEach((function(e){new a({formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_inactive",inputErrorClass:"popup__input_type_error",inputErrorActive:"popup__input-error_active",errorClass:".popup__error"},e).enableValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,